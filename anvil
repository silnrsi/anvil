#!/bin/bash
# A simple script to run smith in a dockerized environment (and to ease the transition from Vagrant)
# Copyright (c) 2022 SIL International (http://www.sil.org)'
# Released under the MIT License (http://en.wikipedia.org/wiki/MIT_License)
# maintained by Nicolas Spalinger


COMPOSE="$HOME/repos/anvil/docker-compose.yml"


case $1 in
        "validate" | "check" | "config")
                echo "Validating configuration"
                docker compose -f "$COMPOSE" config
                echo ""
                echo "Checking if anvil and its config file are current:"
                iscurrentscript=$(diff ~/bin/anvil ~/repos/anvil/anvil)
                if [ -z "$iscurrentscript" ];
                then
                    echo "Your anvil script is current (same as the one in the repository)"
                else
                    echo "Your anvil file is not current, please update your anvil repository and copy anvil to ~/bin"
                fi
                configchanges=$(cd ~/repos/anvil/ && git diff -U0 --color docker-compose.yml)
                echo ""
                echo "The differences between your docker-compose.yml and the reference in the anvil repository:"
                echo "$configchanges"
                ;;
        "debug" | "logs")
                echo "Launching build without parallel mode, without cache and with logs (needs build: in the docker compose file)"
                docker compose -f "$COMPOSE" -p smith --progress=plain build --no-cache 2>&1 | tee build.log
                ;;

        "up" | "start")
                echo "Getting image, spinning up the container and provisionning"
                docker compose -f "$COMPOSE" -p smith pull
                docker compose -f "$COMPOSE" -p smith build
                docker compose -f "$COMPOSE" up -d --remove-orphans 
                ;;
        "provision")
                echo "No need to use provision any longer, use up instead"
                ;;
        "status" | "ps")
                echo "Showing container status"
                docker compose -f "$COMPOSE" ps
                ;;
        "ssh" | "enter" | "exec" | "run")
                echo "Entering the container in interactive mode (type exit to get back)"
                docker compose -f "$COMPOSE" run -it --rm smith bash -l
                ;;
        "up-dev" | "start-dev")
                echo "Spinning up the container from existing local image without pulling new one"
                docker compose -f "$COMPOSE" -p smith build
                docker compose -f "$COMPOSE" up -d
                ;;
        "ssh-dev" | "enter-dev" | "exec-dev" | "run-dev")
                echo "Entering the container in interactive mode, with persistence for local development (type exit to get back)"
                docker compose -f "$COMPOSE" create smith
                docker compose -f "$COMPOSE" exec -it -u builder smith bash -l
                ;;
        "when" | "time")
                echo "ID              Creation date                   Status"
                docker container ls --format '{{.ID}}\t{{.CreatedAt}}\t{{.State}}\t{{.Status}}'
                ;;
        "down" | "halt" | "destroy" | "stop")
                echo "Stopping and removing the container(s)"
                docker compose -f "$COMPOSE" down --remove-orphans
                ;;
        "clean" | "prune" | "purge")
                echo "Purging stale images / containers, unused volumes and the whole build cache"
                docker stop smith
                docker rm smith
                docker rmi -f smith smith-smith anvil-smith
                docker volume prune
                docker system prune -a
                ;;
        "--help" | "help" | "--usage" | "usage" | *)
                echo "Anvil: üèóÔ∏è  üê≥  helper for running a dockerized smith"
                echo "Config file: $COMPOSE"
                echo "Usage: anvil <target> (alias) - description:"
                echo "  anvil up (start) - get the image, spin up a container"
                echo "  anvil ssh (enter) (exec) (run) - log in to the container"
                echo "  anvil status (ps) - show the status of the container"
                echo "  anvil down (halt) (destroy) (stop) - stop and remove the container"
                echo "  anvil when (time) - check since when the container has been created and has been running"
                echo "  anvil config (validate) (check) - validate the configuration file and compare against reference files from the repository"
                echo "  Advanced targets: "
                echo "  anvil clean (prune) (purge) - fully clean out the cache"
                echo "  anvil up-dev (start-dev) - spin up a container using a cached image without pulling a new one"
                echo "  anvil ssh-dev (enter-dev) (exec-dev) (run-dev) - spin up a persistent container which needs anvil up beforehand"
                echo "  anvil debug (logs) - debug and generate more logs with when building a local image with build: instead of image: in docker-compose.yml"
                ;;
esac
